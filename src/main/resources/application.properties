spring.shardingsphere.datasource.names=master0,master1,slave0,slave1

spring.shardingsphere.datasource.master0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master0.url=jdbc:mysql://192.168.56.77:3306/ds0
spring.shardingsphere.datasource.master0.username=root
spring.shardingsphere.datasource.master0.password=root1234

spring.shardingsphere.datasource.master1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master1.url=jdbc:mysql://192.168.56.77:3306/ds1
spring.shardingsphere.datasource.master1.username=root
spring.shardingsphere.datasource.master1.password=root1234


spring.shardingsphere.datasource.slave0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.slave0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave0.url=jdbc:mysql://192.168.56.77:3306/ds0
##只读账户
spring.shardingsphere.datasource.slave0.username=dev
spring.shardingsphere.datasource.slave0.password=dev777

spring.shardingsphere.datasource.slave1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.slave1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.slave1.url=jdbc:mysql://192.168.56.77:3306/ds1
##只读账户
spring.shardingsphere.datasource.slave1.username=dev
spring.shardingsphere.datasource.slave1.password=dev777

spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.t_order_item.key-generator.column=order_item_id
spring.shardingsphere.sharding.tables.t_order_item.key-generator.type=SNOWFLAKE

spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=master0.t_order0,master1.t_order1,slave0.t_order0,slave1.t_order1
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order$->{order_id % 2}
# 自定义分表策略
#spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.precise-algorithm-class-name=com.shardingdemo.infrastructure.sharding.TableShardingAlgorithm

spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes=master0.t_order_item0,master1.t_order_item1,slave0.t_order_item0,slave1.t_order_item1
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item$->{order_id % 2}

# 自定义分库的列是order_id
spring.shardingsphere.sharding.default-database-strategy.standard.sharding-column=order_id
# 自定义分库策略
spring.shardingsphere.sharding.default-database-strategy.standard.precise-algorithm-class-name=com.shardingdemo.infrastructure.sharding.DatabaseShardingAlgorithm

spring.shardingsphere.props.sql.show=true

mybatis.mapper-locations=classpath*:/com/shardingdemo/mapper/*Mapper.xml

logging.level.root=INFO
logging.file.name=/log/root.log
